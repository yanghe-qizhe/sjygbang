@{
    ViewBag.Title = "原材采样管理";
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}
<script src="~/Content/Scripts/Report/CreateControl.js" type="text/javascript"></script>
<script type="text/javascript">
    var ModuleId = GetQuery('ModuleId'); //菜单主键
    var ICNO;
    CreateReport("Report");
    $(function () {
        $("#Report").css("display", "none");
        GetGrid();
        setTimeout(function () {
              Report.LoadFromURL(RootPath() + "/Content/GRF/ReportView/PrintCode1.grf");
        }, "500");
    });

    //搜索
    function btn_Search() {
        var StartTime = $("#StartTime").val();
        var EndTime = $("#EndTime").val();
        var BillNo = $("#BILLNO").val();
        var MATERIALNAME = $("#MATERIALNAME").val();
        var TYPE = $("#TYPE").val(); 
         var DEF6 = $("#DEF6").val();
           var DEF5 = $("#DEF5").val();
            var CARS = $("#CARS").val();

        $("#gridTable").jqGrid('setGridParam', {
            url: "@Url.Content("~/ZJGCManager/ZJGCCY/GetOrderList")?StartTime=" + StartTime + '&EndTime=' + EndTime + '&BillNo=' + escape(BillNo) + '&MATERIALNAME=' + escape(MATERIALNAME)+'&CARS='+escape(CARS)+"&CHECKTYPE="+TYPE+'&DEF6='+DEF6+'&DEF5='+DEF5, page: 1
        }).trigger('reloadGrid');
    }
    //加载表格
    function GetGrid() {
        var StartTime = $("#StartTime").val();
        var EndTime = $("#EndTime").val();
      
        $("#gridTable").jqGrid({
            url: "@Url.Content("~/ZJGCManager/ZJGCCY/GetOrderList")?StartTime=" + StartTime + '&EndTime=' + EndTime  ,
          datatype: "json",
            height: $(window).height() - 180,
            autowidth: true,
            colModel: [
                { label: '采样单号', name: 'BILLNO', index: 'BILLNO', width: 100, align: 'left', align: 'center' },
                { label: '手工样号', name: 'HANDBILLNO', index: 'HANDBILLNO', width: 100, align: 'left', align: 'center' },
                { label: 'TYPE', name: 'TYPE', index: 'TYPE',  hidden: true },
                { label: '状态', name: 'TYPENAME', index: 'TYPENAME', width: 60, align: 'center',
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue == '1') return "<span style='color:red;font-size:18px'>采样</span>";
                        if (cellvalue == '4') return "<span style='color:black;font-size:18px'>制样</span>";
                        if (cellvalue == '4') return "<span style='color:black;font-size:18px'>制样</span>";
                        if (cellvalue == '5') return "<span style='color:green;font-size:18px'>化验</span>";
                    }
                },
                  { label: 'ISSEND', name: 'ISSEND', index: 'ISSEND',  hidden: true },
                {
                    label: '送检状态', name: 'ISSENDNAME', index: 'ISSENDNAME', width: 60, align: 'center',
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue == '0') return "<span style='color:red;font-size:18px'>未送检</span>";
                        if (cellvalue == '1') return "<span style='color:green;font-size:18px'>已送检</span>";
                        if (!IsNull(cellvalue)) return "<span style='color:red;font-size:18px'>未送检</span>";
                    }
                },  
      
               {  label: '创建日期', name: 'CRETIME', index: 'CRETIME', width: 110, align: 'center'  }, 
                { label: 'SUPPLY', name: 'SUPPLY', index: 'SUPPLY',  width: 120, align: 'center',  hidden: true  },
                { label: '供应商', name: 'SUPPLYNAME', index: 'SUPPLYNAME', width: 120, align: 'center' },
                { label: 'MATERIAL', name: 'MATERIAL', index: 'MATERIAL',  width: 120, align: 'center',  hidden: true  },
                { label: '物料', name: 'MATERIALNAME', index: 'MATERIALNAME', width: 120, align: 'center' },
                     { label: '规格', name: 'MATERIALSPEC', index: 'MATERIALSPEC', width: 120, align: 'center' },
                { label: '采样日期', name: 'CYDATE', index: 'CYDATE', width: 100, align: 'center' },
//                 { label: '采样人甲', name: 'CYUSER', index: 'CYUSER', width: 80, align: 'center' },
//                 { label: '采样人乙', name: 'CYUSER1', index: 'CYUSER1', width: 80, align: 'center' },
//                   { label: '交样人甲', name: 'JYUSER', index: 'JYUSER', width: 80, align: 'center' },
//                 { label: '交样人乙', name: 'JYUSER1', index: 'JYUSER1', width: 80, align: 'center' },
                 { label: '接样人甲', name: 'SYUSER', index: 'SYUSER', width: 80, align: 'center' },
                { label: '接样人乙', name: 'SYUSER1', index: 'SYUSER1', width: 80, align: 'center' },
                     {
                         label: '交接日期', name: 'JYDATE', index: 'JYDATE', width: 110, align: 'center',
                         formatter: function (cellvalue, options, rowObject) {
                             return formatDate(cellvalue, 'yyyy-MM-dd hh:mm');
                         }
                     },
                        { label: '打印次数', name: 'PRINTCOUNT', index: 'PRINTCOUNT', width: 80, align: 'center' },
                { label: '创建人', name: 'CREUSER', index: 'CREUSER', width: 80, align: 'center' },
        

                { label: '备注', name: 'MEMO', index: 'MEMO', width: 200, align: 'left' }
            ],
             viewrecords: true,
            rowNum: 30,
            rowList: [30, 50, 100, 500, 1000],
            pager: "#gridPager",
            sortname: 'CRETIME',
            sortorder: 'desc',
            shrinkToFit: false,
            gridview: true,
            multiselect: true,//复选框 
             multiboxonly: true,  
            //双击
            ondblClickRow: function (RowIndx) {
                MadeCard();
            }
        });
        columnModelData("#gridTable");
    }
 
    //详细信息 制卡
    function MadeCard() {
        var KeyValue = GetJqGridRowValue("#gridTable", "BILLNO");
        if (IsNull(KeyValue)) {
         var ISSEND = GetJqGridRowValue("#gridTable", "ISSEND");
            if ( ISSEND == "1") {
                tipDialog("该批次已送检,无法制卡", 3, 0);
            } else {
                AddTabMenu("ZJGCCYDetails", "@Url.Content("~/ZJGCManager/ZJGCCY/ZJGCCYDetails")?ModuleId=" + ModuleId+"&KeyValue=" + escape(KeyValue), "过程采样详细信息", "page_white_add.png", true, true, true);
            }
        } else {
            tipDialog("请选择采样单", 3, 0);
        }
    }

    //新增
    function btn_add() {
        AddTabMenu("ZJGCCYForm", "@Url.Content("~/ZJGCManager/ZJGCCY/ZJGCCYForm")?ModuleId=" + ModuleId, "新增过程采样", "page_white_add.png", true, true, true);
    }
    
   

    //编辑
    function btn_edit() {
        var KeyValue = GetJqGridRowValue("#gridTable", "BILLNO");
        if (IsChecked(KeyValue)) {
           var ISSEND = GetJqGridRowValue("#gridTable", "ISSEND");
            if ( ISSEND == "0") {
                    //汽运
                    AddTabMenu("ZJGCCYForm", "@Url.Content("~/ZJGCManager/ZJGCCY/ZJGCCYForm")?ModuleId=" + ModuleId + "&KeyValue=" + escape(KeyValue) + "&EditType=0", "编辑过程采样", "page_white_add.png", true, true, true);
            } else {
                tipDialog("已送检无法编辑", 3, 0);
            }
        }
    }
 
    //删除
    function btn_delete() {
     var ISSEND = GetJqGridRowValue("#gridTable", "ISSEND");
    var arrsend= ISSEND.split(",");
    var arr=$.grep(arrsend,
    function(n,i){
        return n=="1";
        }); 
     if(arr.length==0){
        var KeyValue = GetJqGridRowValue("#gridTable", "BILLNO");
        if (IsDelData(KeyValue)) {
            var delparm = 'KeyValue=' + KeyValue;
            delConfig('/ZJGCManager/ZJGCCY/DeleteOrder', delparm, KeyValue.split(",").length);
        }
        }else{
         tipDialog('只能删除未送检状态数据！', 4, 'warning');
        }
    }

    function delConfig(url, parm, count) {
        if (count == undefined) {
            count = 1;
        }
        confirmDialog("提示", "注：您确定要删除当前记录吗？将会导致数据丢失,请谨慎操作", function (r) {
            if (r) {
                Loading(true, "正在删除数据...");
                window.setTimeout(function () {
                    AjaxJson(url, parm, function (data) {
                        tipDialog(data.Message, 3, data.Code);
                        if (data.Code > 0) {
                            windowload();
                        }
                    });
                }, 200);
            }
        });
    }
   
    
     //送检
    function SendCheck() {
        var KeyValue = GetJqGridRowValue("#gridTable", "BILLNO");
        if (IsNull(KeyValue)) {
            var postData = jQuery.parseJSON('{\"DATA\":\"' + KeyValue + '\"}');
            AjaxJson("/ZJGCManager/ZJGCZY/CheckCYData", postData, function (data) {
                if (IsNull(data) && IsNull(data.Code)) {
                        tipDialog(data.Message, 3, data.Code);
                        windowload();
                }
            });
        } else {
            tipDialog('请至少选择一个批次', 4, 'warning');
        }
    }
    //传质检
   function btn_HandOrder(){
      var KeyValue = GetJqGridRowValue("#gridTable", "BILLNO");
                if (IsNull(KeyValue)) {
            confirmDialog('提示', '注：您确认要重传操作吗？', function (r) {
            if (r) {
              
                        var  parm = 'KeyValue=' + KeyValue;
                        AjaxJson('/ZJGCManager/ZJGCZY/HandOrderAll', parm, function (data) {
                            tipDialog(data.Message, 3, data.Code);
                            if (data.Code > 0) {
                                windowload();
                            }
                        });
          
           }
          });
                    }else {
                tipDialog('请至少选择一个采样单号', 4, 'warning');
            }
    }
    //取消送检
    function UNSendCheck() {
        var KeyValue = GetJqGridRowValue("#gridTable", "BILLNO");
        if (IsNull(KeyValue) && KeyValue.indexOf(',') < 0) {
            var postData = jQuery.parseJSON('{\"DATA\":\"' + KeyValue + '\"}');
            AjaxJson("/ZJGCManager/ZJGCZY/UNSendCheck", postData, function (data) {
                if (IsNull(data) && IsNull(data.Code)) {
                    tipDialog(data.Message, 3, data.Code);
                    windowload();
                }
            });
        } else {
            tipDialog('请选择一个批次', 4, 'warning');
        }
    }


       //打印条码
    function Print() {
        var KeyValue = GetJqGridRowValue("#gridTable", "BILLNO");
        if (IsChecked(KeyValue)) {
            Report.LoadDataFromURL("/ZJGCManager/ZJGCZY/ZYPrintCode?KeyValue=" +KeyValue);
                    //Report.Print(true);
            Report.PrintPreview(true);
        }
    }
     //补打条码
      function BDPrint() {
        var KeyValue = GetJqGridRowValue("#gridTable", "BILLNO");
         if (IsChecked(KeyValue)) {
         AddTabMenu("BDGCPrintCodeReportIndex", "@Url.Content("~/ReportManager/PrintViewReport/BDGCPrintCodeReportIndex")?KeyValue="+KeyValue, "补打条码", "page_white_edit.png", true, true, true);
        }
    }
    //刷新
    function windowload() {
        $("#gridTable").trigger("reloadGrid"); //重新载入
        $("#gridTable2").trigger("reloadGrid"); //重新载入
    }

     //打开读卡器
    //res:1-打开读卡器失败,2-打开射频卡片失败,0-成功。
    var CardNumber = "";
    function CardOpen() {
        var res = 100;
        var version = MWRFATL.OpenReader();
        var iRet = MWRFATL.LastRet;
        //蜂鸣30
        MWRFATL.RF_Beep(30);
        if (iRet != 0) {
            res = 1;
            $('#msg').text('打开读卡器失败！');
            MWRFATL.CloseCard();
            iRet = MWRFATL.LastRet;
            MWRFATL.CloseReader();
            iRet = MWRFATL.LastRet;
        }
        else {
            $('#msg').text(version);
            CardNumber = MWRFATL.OpenCard(1);
            iRet = MWRFATL.LastRet;
            if (iRet != 0) {
                res = 1;
                $('#msg').text('IC卡没有放在读卡器上！');
            }
            else {
                res = 0;
                $('#msg').text(CardNumber);
            }
            MWRFATL.CloseReader();
            iRet = MWRFATL.LastRet;
        }
        return res;
    }

    function SetCardNo(CardNumber) {
        var arr = CardNumber.split('');
        var num = "";
        var len = arr.length - 1;
        for (i = 0; i <= len; i = i + 2) {
            num += arr[i] + arr[i + 1];
        }
        var cid = parseInt(num, 16);
        return cid;
    }

     function ReadCard() {
        CardOpen();
        var ICCard = "";
        if (IsNullOrEmpty(CardNumber)) {
            ICCard = SetCardNo(CardNumber);
            $("#ICCARD").val(ICCard);
            btn_Search();
        }
        if (ICCard == "") {
            tipDialog("读IC卡失败，IC卡序号为空！", 3, "");
            return false;
        }
    }
</script>
<object id="MWRFATL" style="display: none; width: 0px; height: 0px" codebase="~/RFReader/MwRFReader.cab#version=1,0,0,2"
    data="data:application/x-oleobject;base64,VPpLUhUXNkSyudxeJIvBwwADAAAAAAAAAAAAAA=="
    classid="CLSID:524BFA54-1715-4436-B2B9-DC5E248BC1C3">
</object>
<div class="leftline rightline" style="margin-left: 1px; margin-right: 1px;">
    <div class="tools_bar" style="margin-top: 1px; margin-bottom: 0px;">
        <div class="PartialButton">
            @Html.Partial("_PartialButton")
        </div>
    </div>
    <div class="QueryArea">
        <table border="0" class="form-find" style="height: 45px;">
            <tr>
                <th>
                    状态：
                </th>
                <td>
                    <select id="TYPE" name="TYPE" class="select" style="width: 120px;">
                        <option value="">请选择</option>
                        <option value="1">采样</option>
                        <option value="4">制样</option>
                    </select>
                </td>
                <th>
                    采样单号：
                </th>
                <td>
                    <input id="BILLNO" type="text" class="txt" style="width: 120px" />
                </td>
                <th>
                    异型卡序号：
                </th>
                <td>
                    <input id="ICCARD" type="text" class="txt" style="width: 120px" />
                </td>
                <td>
                    <input id="btnRead" type="button" class="btnSearch" value="读 卡" onclick="ReadCard()" />
                </td>
            </tr>
            <tr>
                <th>
                    物料：
                </th>
                <td>
                    <input id="MATERIALNAME" type="text" class="txt" style="width: 120px" />
                </td>
                <th>
                    制单日期：
                </th>
                <td>
                    <input id="StartTime" type="text" class="txt Wdate" value="@EOS.Utilities.DateTimeHelper.GetDate(-1)" style="width: 120px" onfocus="var endDate=$dp.$('EndTime');WdatePicker({onpicked:function(){EndTime.focus();},maxDate:'#F{$dp.$D(\'EndTime\')}'})" />
                </td>
                <td>
                    -
                </td>
                <td>
                    <input id="EndTime" type="text" class="txt Wdate" value="@EOS.Utilities.DateTimeHelper.GetToday()" style="width: 120px" onfocus="WdatePicker({minDate:'#F{$dp.$D(\'StartTime\')}'})" />
                </td>
                <td>
                    <input id="btnSearch" type="button" class="btnSearch" value="搜 索" onclick="btn_Search()" />
                </td>
            </tr>
        </table>
    </div>
    <div id="grid_List" class="topline">
        <table id="gridTable">
        </table>
        <div id="gridPager">
        </div>
        <table id="gridTable2">
        </table>
    </div>
</div>
<style>
    .ui-widget-content
    {
        border-left: none;
    }
</style>
